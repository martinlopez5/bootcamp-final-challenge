name: Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
    REGISTRY: margus23
    IMAGE_NAME_GO: image-golang
    IMAGE_NAME_NODE: image-node
    # HEROKU_APP_NAME_NODE: desafio-final-bc-node
    # HEROKU_APP_NAME_GOLANG: desafio-final-bc-golang



jobs:
  
  build-docker-go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./hello-world-golang
        push: true
        tags: ${{ env.REGISTRY }}/${{ ENV.IMAGE_NAME_GO }}:latest


  # deploy-heroku-go:
  #     runs-on: ubuntu-latest
  #     needs: build-docker-go
  #     steps:
  #       - uses: actions/checkout@v3
  #       - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
  #         with:
  #           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #           heroku_app_name: ${{env.HEROKU_APP_NAME_GOLANG}} #Must be unique in Heroku
  #           heroku_email: "martingustavolopez@gmail.com"
  #           healthcheck: "https://${{env.HEROKU_APP_NAME_GOLANG}}.herokuapp.com/golang/hello"
  #           appdir: ./hello-world-golang
  #           usedocker: true



  build-docker-node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./hello-world-nodejs
        push: true
        tags: ${{ env.REGISTRY }}/${{ ENV.IMAGE_NAME_NODE }}:latest


  # deploy-heroku-node:
  #     runs-on: ubuntu-latest
  #     needs: build-docker-node
  #     steps:
  #       - uses: actions/checkout@v3
  #       - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
  #         with:
  #           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #           heroku_app_name: ${{env.HEROKU_APP_NAME_NODE}} #Must be unique in Heroku
  #           heroku_email: "martingustavolopez@gmail.com"
  #           appdir: ./hello-world-nodejs
  #           healthcheck: "https://${{env.HEROKU_APP_NAME_NODE}}.herokuapp.com/hello"
  #           usedocker: true


  deploy-to-EC2:
    needs: Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Git pull
        env:
          AWS_EC2_PEM: ${{ secrets.AWS_EC2_PEM  }}
          AWS_EC2_PUBLIC_IP: ${{ secrets.AWS_EC2_PUBLIC_IP  }}
          AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME  }}
        run: |
          pwd
          echo "$AWS_EC2_PEM" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_EC2_USERNAME}@${AWS_EC2_PUBLIC_IP} '
            cd {/path/to/your/project/directory} &&
            git checkout main &&
            git fetch --all &&
            git reset --hard origin/main &&
            git pull origin main &&
            docker-compose up -d --build
          '


#
#
#